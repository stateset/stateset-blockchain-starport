syntax = "proto3";

package stateset.invoice.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/stateset/stateset-blockchain/x/invoice/types";

message Invoice {
  string creator = 1;
  string invoice_id = 2;
  string invoice_number = 3; 
  string invoice_name = 4;
  string billing_reason = 5;
  string amount_due = 6;
  string amount_paid = 7;
  string amount_remaining = 8;
  string subtotal = 9;
  string total = 10;
  string party = 11;
  string counterparty = 12;
  string factor = 13;
  string due_date = 14;
  string period_start_date = 15;
  string period_end_date = 16;
}

// State is an enum which refers to state of an ourchase order
enum State {

  option (gogoproto.goproto_enum_prefix) = false;
  // Prefix should start with 0 in enum. So declaring dummy state
  invalid = 0 [(gogoproto.enumvalue_customname) = "InvoiceStateInvalid"];

  request = 1 [(gogoproto.enumvalue_customname) = "Request"];

  paid = 2 [(gogoproto.enumvalue_customname) = "Paid"];

  canceled = 3 [(gogoproto.enumvalue_customname) = "Canceled"];

  factored = 4 [(gogoproto.enumvalue_customname) = "Factored"];
}

message InvoiceFilters {
  option (gogoproto.equal) = false;

  string owner = 1 [(gogoproto.jsontag) = "owner", (gogoproto.moretags) = "yaml:\"owner\""];

  string state = 2 [(gogoproto.jsontag) = "state", (gogoproto.moretags) = "yaml:\"state\""];

}




// Msg is the stateset.invoice.v1beta1 Msg service
service Msg {

  // Create defines a method to create a new invoice.
  rpc Create(MsgCreateInvoiceRequest) returns (MsgCreateInvoiceResponse);

   // Update defines a method to update an invoice.
  rpc Update(MsgUpdateInvoiceRequest) returns (MsgUpdateInvoiceResponse);

   // Delete defines a method to create a new invoice.
  rpc Delete(MsgDeleteInvoiceRequest) returns (MsgDeleteInvoiceResponse);

  // Cancel defines a method to cancel an invoice
  rpc Cancel(MsgCancelInvoiceRequest) returns (MsgCancelInvoiceResponse);

  // Complete defines a method to complete an invoice
  rpc Complete(MsgCompleteInvoiceRequest) returns (MsgCompleteInvoiceResponse);

  // Factor defines a method to factor an invoice
  rpc Factor(MsgFactorInvoiceRequest) returns (MsgFactorInvoiceResponse);

}

// MsgCreateInvoiceRequest is the Msg/CreateInvoice request type.
message MsgCreateInvoiceRequest {
  // sender is the address of the sender of the transaction.
  string creator = 1;
  string invoice_id = 2;
  string invoice_number = 3; 
  string invoice_name = 4;
  string billing_reason = 5;
  string amount_due = 6;
  string amount_paid = 7;
  string amount_remaining = 8;
  string subtotal = 9;
  string total = 10;
  string party = 11;
  string counterparty = 12;
  string factor = 13;
  string due_date = 14;
  string period_start_date = 15;
  string period_end_date = 16;
}

// MsgSignDataResponse is the Msg/SignData response type.
message MsgCreateInvoiceResponse {

  string invoice_id = 1;

}


// MsgCreateInvoiceRequest is the Msg/CreateInvoice request type.
message MsgUpdateInvoiceRequest {
  
  string sender = 1;

  string invoice_id = 2;

  string invoice_number = 3;

  string invoice_name = 4;

  string billing_reason = 5;
 
  string amount_due = 6;
  
  string amount_paid = 7;
  
  string amount_remaining = 8;
  
  string subtotal = 9;
  
  string total = 10;
  
  string party = 11;
  
  string counterparty = 12;
  
  string factor = 13;
  
  string due_date = 14;
  
  string period_start_date = 15;
  
  string period_end_date = 16;
}

// MsgSignDataResponse is the Msg/SignData response type.
message MsgUpdateInvoiceResponse {

  string invoice_id = 1;
  
}

// MsgActivateInvoiceRequest is the Msg/ActivateInvoice request type.
message MsgCancelInvoiceRequest {
  // sender is the address of the sender of the transaction.
  string sender = 1;
  string invoice_id = 2;
}

// MsgSignDataResponse is the Msg/SignData response type.
message MsgCancelInvoiceResponse {}

// MsgActivateInvoiceRequest is the Msg/ActivateInvoice request type.
message MsgDeleteInvoiceRequest {
  // sender is the address of the sender of the transaction.
  string sender = 1;
  string invoice_id = 2;
}

// MsgSignDataResponse is the Msg/SignData response type.
message MsgDeleteInvoiceResponse {}

// MsgActivateInvoiceRequest is the Msg/ActivateInvoice request type.
message MsgCompleteInvoiceRequest {
  // sender is the address of the sender of the transaction.
  string sender = 1;
  string invoice_id = 2;
}

// MsgSignDataResponse is the Msg/SignData response type.
message MsgCompleteInvoiceResponse {}

message MsgFactorInvoiceRequest {

  // sender is the address of the sender of the transaction.
  string sender = 1;
  string invoice_id = 2;
}

message MsgFactorInvoiceResponse {}
