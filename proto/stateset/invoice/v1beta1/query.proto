syntax = "proto3";
package stateset.invoice.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "stateset/invoice/v1beta1/tx.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/stateset/stateset-blockchain-starport/x/invoice/types";

// Query defines the gRPC querier service.
service Query {

  // Invoices returns invoices.
  rpc Invoices(QueryInvoicesRequest) returns (QueryInvoicesResponse) {
    option (google.api.http).get = 
        "/stateset/invoice/v1beta1/invoices";
  }

    // Invoice returns invoice details based on incoice id.
	rpc Invoice(QueryInvoiceRequest) returns (QueryInvoiceResponse) {
    option (google.api.http).get = 
        "/stateset/invoice/v1beta1/invoices/{invoice_id}";
	}

}

// QueryInvoiceRequest is the Query/Invoice request type.
message QueryInvoicesRequest {

  InvoiceFilters filters = 1 [(gogoproto.nullable) = false];

  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryInvoicesResponse {

	repeated Invoice invoices = 1 [(gogoproto.nullable) = false];

	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryInvoiceRequest {

  // invoice_id is the unique ID of invoice to query.
  string invoice_id = 1 [(gogoproto.moretags) = "yaml:\"invoice_id\""];
  
}

// QueryClassInfoResponse is the Query/ClassInfo request type.
message QueryInvoiceResponse {

  Invoice invoice = 1;
}