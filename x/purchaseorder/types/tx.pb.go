// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stateset/purchaseorder/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State is an enum which refers to state of an ourchase order
type State int32

const (
	// Prefix should start with 0 in enum. So declaring dummy state
	PurchaseOrderStateInvalid State = 0
	Request                   State = 1
	Completed                 State = 2
	Canceled                  State = 3
	Locked                    State = 4
	Financed                  State = 5
)

var State_name = map[int32]string{
	0: "invalid",
	1: "request",
	2: "completed",
	3: "canceled",
	4: "locked",
	5: "financed",
}

var State_value = map[string]int32{
	"invalid":   0,
	"request":   1,
	"completed": 2,
	"canceled":  3,
	"locked":    4,
	"financed":  5,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{0}
}

type PurchaseOrder struct {
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId     string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
	PurchaseorderNumber string `protobuf:"bytes,3,opt,name=purchaseorder_number,json=purchaseorderNumber,proto3" json:"purchaseorder_number,omitempty"`
	PurchaseorderHash   string `protobuf:"bytes,4,opt,name=purchaseorder_hash,json=purchaseorderHash,proto3" json:"purchaseorder_hash,omitempty"`
	PurchaseorderStatus string `protobuf:"bytes,5,opt,name=purchaseorder_status,json=purchaseorderStatus,proto3" json:"purchaseorder_status,omitempty"`
	Description         string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	PurchaseDate        string `protobuf:"bytes,7,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	DeliveryDate        string `protobuf:"bytes,8,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Subtotal            string `protobuf:"bytes,9,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Total               string `protobuf:"bytes,10,opt,name=total,proto3" json:"total,omitempty"`
	Purchaser           string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	Vendor              string `protobuf:"bytes,12,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Fulfiller           string `protobuf:"bytes,13,opt,name=fulfiller,proto3" json:"fulfiller,omitempty"`
	Financer            string `protobuf:"bytes,14,opt,name=financer,proto3" json:"financer,omitempty"`
}

func (m *PurchaseOrder) Reset()         { *m = PurchaseOrder{} }
func (m *PurchaseOrder) String() string { return proto.CompactTextString(m) }
func (*PurchaseOrder) ProtoMessage()    {}
func (*PurchaseOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{0}
}
func (m *PurchaseOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PurchaseOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PurchaseOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PurchaseOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurchaseOrder.Merge(m, src)
}
func (m *PurchaseOrder) XXX_Size() int {
	return m.Size()
}
func (m *PurchaseOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PurchaseOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PurchaseOrder proto.InternalMessageInfo

func (m *PurchaseOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaseorderNumber() string {
	if m != nil {
		return m.PurchaseorderNumber
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaseorderHash() string {
	if m != nil {
		return m.PurchaseorderHash
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaseorderStatus() string {
	if m != nil {
		return m.PurchaseorderStatus
	}
	return ""
}

func (m *PurchaseOrder) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaseDate() string {
	if m != nil {
		return m.PurchaseDate
	}
	return ""
}

func (m *PurchaseOrder) GetDeliveryDate() string {
	if m != nil {
		return m.DeliveryDate
	}
	return ""
}

func (m *PurchaseOrder) GetSubtotal() string {
	if m != nil {
		return m.Subtotal
	}
	return ""
}

func (m *PurchaseOrder) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *PurchaseOrder) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *PurchaseOrder) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *PurchaseOrder) GetFulfiller() string {
	if m != nil {
		return m.Fulfiller
	}
	return ""
}

func (m *PurchaseOrder) GetFinancer() string {
	if m != nil {
		return m.Financer
	}
	return ""
}

type PurchaseOrderFilters struct {
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state" yaml:"state"`
}

func (m *PurchaseOrderFilters) Reset()         { *m = PurchaseOrderFilters{} }
func (m *PurchaseOrderFilters) String() string { return proto.CompactTextString(m) }
func (*PurchaseOrderFilters) ProtoMessage()    {}
func (*PurchaseOrderFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{1}
}
func (m *PurchaseOrderFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PurchaseOrderFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PurchaseOrderFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PurchaseOrderFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurchaseOrderFilters.Merge(m, src)
}
func (m *PurchaseOrderFilters) XXX_Size() int {
	return m.Size()
}
func (m *PurchaseOrderFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_PurchaseOrderFilters.DiscardUnknown(m)
}

var xxx_messageInfo_PurchaseOrderFilters proto.InternalMessageInfo

func (m *PurchaseOrderFilters) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *PurchaseOrderFilters) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// MsgCreatePurchaseOrderRequest is the Msg/CreatePurchaseOrder request type.
type MsgCreatePurchaseOrderRequest struct {
	// creator is the address of the account that created the purchase order
	// class.
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId     string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
	PurchaseorderNumber string `protobuf:"bytes,3,opt,name=purchaseorder_number,json=purchaseorderNumber,proto3" json:"purchaseorder_number,omitempty"`
	PurchaseorderName   string `protobuf:"bytes,4,opt,name=purchaseorder_name,json=purchaseorderName,proto3" json:"purchaseorder_name,omitempty"`
	PurchaseorderStatus string `protobuf:"bytes,5,opt,name=purchaseorder_status,json=purchaseorderStatus,proto3" json:"purchaseorder_status,omitempty"`
	Description         string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	PurchaseDate        string `protobuf:"bytes,7,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	DeliveryDate        string `protobuf:"bytes,8,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Subtotal            string `protobuf:"bytes,9,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Total               string `protobuf:"bytes,10,opt,name=total,proto3" json:"total,omitempty"`
	Purchaser           string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	Vendor              string `protobuf:"bytes,12,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Fulfiller           string `protobuf:"bytes,13,opt,name=fulfiller,proto3" json:"fulfiller,omitempty"`
	Financer            string `protobuf:"bytes,14,opt,name=financer,proto3" json:"financer,omitempty"`
}

func (m *MsgCreatePurchaseOrderRequest) Reset()         { *m = MsgCreatePurchaseOrderRequest{} }
func (m *MsgCreatePurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePurchaseOrderRequest) ProtoMessage()    {}
func (*MsgCreatePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{2}
}
func (m *MsgCreatePurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePurchaseOrderRequest.Merge(m, src)
}
func (m *MsgCreatePurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgCreatePurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaseorderNumber() string {
	if m != nil {
		return m.PurchaseorderNumber
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaseorderName() string {
	if m != nil {
		return m.PurchaseorderName
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaseorderStatus() string {
	if m != nil {
		return m.PurchaseorderStatus
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaseDate() string {
	if m != nil {
		return m.PurchaseDate
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetDeliveryDate() string {
	if m != nil {
		return m.DeliveryDate
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetSubtotal() string {
	if m != nil {
		return m.Subtotal
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetFulfiller() string {
	if m != nil {
		return m.Fulfiller
	}
	return ""
}

func (m *MsgCreatePurchaseOrderRequest) GetFinancer() string {
	if m != nil {
		return m.Financer
	}
	return ""
}

// MsgCreatePurchaseOrderResponse is the Msg/CreatePurchaseOrder response type.
type MsgCreatePurchaseOrderResponse struct {
	// purchaseorder_id is the unique ID of the newly created purchase order
	// class.
	PurchaseorderId string `protobuf:"bytes,1,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgCreatePurchaseOrderResponse) Reset()         { *m = MsgCreatePurchaseOrderResponse{} }
func (m *MsgCreatePurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePurchaseOrderResponse) ProtoMessage()    {}
func (*MsgCreatePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{3}
}
func (m *MsgCreatePurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePurchaseOrderResponse.Merge(m, src)
}
func (m *MsgCreatePurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgCreatePurchaseOrderResponse) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

type MsgUpdatePurchaseOrderRequest struct {
	// creator is the address of the account that created the purchase order
	// class.
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId     string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
	PurchaseorderNumber string `protobuf:"bytes,3,opt,name=purchaseorder_number,json=purchaseorderNumber,proto3" json:"purchaseorder_number,omitempty"`
	PurchaseorderHash   string `protobuf:"bytes,4,opt,name=purchaseorder_hash,json=purchaseorderHash,proto3" json:"purchaseorder_hash,omitempty"`
	PurchaseorderStatus string `protobuf:"bytes,5,opt,name=purchaseorder_status,json=purchaseorderStatus,proto3" json:"purchaseorder_status,omitempty"`
	Description         string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	PurchaseDate        string `protobuf:"bytes,7,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	DeliveryDate        string `protobuf:"bytes,8,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Subtotal            string `protobuf:"bytes,9,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Total               string `protobuf:"bytes,10,opt,name=total,proto3" json:"total,omitempty"`
	Purchaser           string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	Vendor              string `protobuf:"bytes,12,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Fulfiller           string `protobuf:"bytes,13,opt,name=fulfiller,proto3" json:"fulfiller,omitempty"`
	Financer            string `protobuf:"bytes,14,opt,name=financer,proto3" json:"financer,omitempty"`
}

func (m *MsgUpdatePurchaseOrderRequest) Reset()         { *m = MsgUpdatePurchaseOrderRequest{} }
func (m *MsgUpdatePurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePurchaseOrderRequest) ProtoMessage()    {}
func (*MsgUpdatePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{4}
}
func (m *MsgUpdatePurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePurchaseOrderRequest.Merge(m, src)
}
func (m *MsgUpdatePurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgUpdatePurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaseorderNumber() string {
	if m != nil {
		return m.PurchaseorderNumber
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaseorderHash() string {
	if m != nil {
		return m.PurchaseorderHash
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaseorderStatus() string {
	if m != nil {
		return m.PurchaseorderStatus
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaseDate() string {
	if m != nil {
		return m.PurchaseDate
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetDeliveryDate() string {
	if m != nil {
		return m.DeliveryDate
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetSubtotal() string {
	if m != nil {
		return m.Subtotal
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetFulfiller() string {
	if m != nil {
		return m.Fulfiller
	}
	return ""
}

func (m *MsgUpdatePurchaseOrderRequest) GetFinancer() string {
	if m != nil {
		return m.Financer
	}
	return ""
}

type MsgUpdatePurchaseOrderResponse struct {
	// purchaseorder_id is the unique ID of the newly created purchase order
	// class.
	PurchaseorderId string `protobuf:"bytes,1,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgUpdatePurchaseOrderResponse) Reset()         { *m = MsgUpdatePurchaseOrderResponse{} }
func (m *MsgUpdatePurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePurchaseOrderResponse) ProtoMessage()    {}
func (*MsgUpdatePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{5}
}
func (m *MsgUpdatePurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePurchaseOrderResponse.Merge(m, src)
}
func (m *MsgUpdatePurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgUpdatePurchaseOrderResponse) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

type MsgDeletePurchaseOrderRequest struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId uint64 `protobuf:"varint,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgDeletePurchaseOrderRequest) Reset()         { *m = MsgDeletePurchaseOrderRequest{} }
func (m *MsgDeletePurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePurchaseOrderRequest) ProtoMessage()    {}
func (*MsgDeletePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{6}
}
func (m *MsgDeletePurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePurchaseOrderRequest.Merge(m, src)
}
func (m *MsgDeletePurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgDeletePurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePurchaseOrderRequest) GetPurchaseorderId() uint64 {
	if m != nil {
		return m.PurchaseorderId
	}
	return 0
}

type MsgDeletePurchaseOrderResponse struct {
	// purchaseorder_id is the unique ID of the newly created purchase order
	// class.
	PurchaseorderId string `protobuf:"bytes,1,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgDeletePurchaseOrderResponse) Reset()         { *m = MsgDeletePurchaseOrderResponse{} }
func (m *MsgDeletePurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePurchaseOrderResponse) ProtoMessage()    {}
func (*MsgDeletePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{7}
}
func (m *MsgDeletePurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePurchaseOrderResponse.Merge(m, src)
}
func (m *MsgDeletePurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgDeletePurchaseOrderResponse) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgCompletePurchaseOrderRequest is the Msg/CompletePurchaseOrder request
// type.
type MsgCompletePurchaseOrderRequest struct {
	// sender is the address of the sender of the transaction.
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgCompletePurchaseOrderRequest) Reset()         { *m = MsgCompletePurchaseOrderRequest{} }
func (m *MsgCompletePurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCompletePurchaseOrderRequest) ProtoMessage()    {}
func (*MsgCompletePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{8}
}
func (m *MsgCompletePurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompletePurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompletePurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompletePurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompletePurchaseOrderRequest.Merge(m, src)
}
func (m *MsgCompletePurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompletePurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompletePurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompletePurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgCompletePurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCompletePurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgCompletePurchaseOrderResponse is the Msg/CompletePurchaseOrderResponse
// response type.
type MsgCompletePurchaseOrderResponse struct {
	// purchaseorder_id is the unique ID of the newly created purchase order
	// class.
	PurchaseorderId string `protobuf:"bytes,1,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgCompletePurchaseOrderResponse) Reset()         { *m = MsgCompletePurchaseOrderResponse{} }
func (m *MsgCompletePurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCompletePurchaseOrderResponse) ProtoMessage()    {}
func (*MsgCompletePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{9}
}
func (m *MsgCompletePurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompletePurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompletePurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompletePurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompletePurchaseOrderResponse.Merge(m, src)
}
func (m *MsgCompletePurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompletePurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompletePurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompletePurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgCompletePurchaseOrderResponse) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgCancelPurchaseOrderRequest is the Msg/CancelPurchaseOrder request type.
type MsgCancelPurchaseOrderRequest struct {
	// sender is the address of the sender of the transaction.
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgCancelPurchaseOrderRequest) Reset()         { *m = MsgCancelPurchaseOrderRequest{} }
func (m *MsgCancelPurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelPurchaseOrderRequest) ProtoMessage()    {}
func (*MsgCancelPurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{10}
}
func (m *MsgCancelPurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelPurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelPurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelPurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelPurchaseOrderRequest.Merge(m, src)
}
func (m *MsgCancelPurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelPurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelPurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelPurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgCancelPurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCancelPurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgCancelPurchaseOrderResponse is the Msg/CancelPurchaseOrder response type.
type MsgCancelPurchaseOrderResponse struct {
	// purchaseorder_id is the unique ID of the newly created purchase order
	// class.
	PurchaseorderId string `protobuf:"bytes,1,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgCancelPurchaseOrderResponse) Reset()         { *m = MsgCancelPurchaseOrderResponse{} }
func (m *MsgCancelPurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelPurchaseOrderResponse) ProtoMessage()    {}
func (*MsgCancelPurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{11}
}
func (m *MsgCancelPurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelPurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelPurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelPurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelPurchaseOrderResponse.Merge(m, src)
}
func (m *MsgCancelPurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelPurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelPurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelPurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgCancelPurchaseOrderResponse) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgLockPurchaseOrder is the Msg/FinancePurchaseOrder request type.
type MsgLockPurchaseOrderRequest struct {
	// sender is the address of the sender of the transaction.
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgLockPurchaseOrderRequest) Reset()         { *m = MsgLockPurchaseOrderRequest{} }
func (m *MsgLockPurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgLockPurchaseOrderRequest) ProtoMessage()    {}
func (*MsgLockPurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{12}
}
func (m *MsgLockPurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLockPurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLockPurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLockPurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLockPurchaseOrderRequest.Merge(m, src)
}
func (m *MsgLockPurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgLockPurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLockPurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLockPurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgLockPurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgLockPurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgFinancePurchaseOrderResponse is the Msg/FinancePurchaseOrder response
// type.
type MsgLockPurchaseOrderResponse struct {
}

func (m *MsgLockPurchaseOrderResponse) Reset()         { *m = MsgLockPurchaseOrderResponse{} }
func (m *MsgLockPurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLockPurchaseOrderResponse) ProtoMessage()    {}
func (*MsgLockPurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{13}
}
func (m *MsgLockPurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLockPurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLockPurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLockPurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLockPurchaseOrderResponse.Merge(m, src)
}
func (m *MsgLockPurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLockPurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLockPurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLockPurchaseOrderResponse proto.InternalMessageInfo

// MsgFinancePurchaseOrder is the Msg/FinancePurchaseOrder request type.
type MsgFinancePurchaseOrderRequest struct {
	// sender is the address of the sender of the transaction.
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PurchaseorderId string `protobuf:"bytes,2,opt,name=purchaseorder_id,json=purchaseorderId,proto3" json:"purchaseorder_id,omitempty"`
}

func (m *MsgFinancePurchaseOrderRequest) Reset()         { *m = MsgFinancePurchaseOrderRequest{} }
func (m *MsgFinancePurchaseOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgFinancePurchaseOrderRequest) ProtoMessage()    {}
func (*MsgFinancePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{14}
}
func (m *MsgFinancePurchaseOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinancePurchaseOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinancePurchaseOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinancePurchaseOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinancePurchaseOrderRequest.Merge(m, src)
}
func (m *MsgFinancePurchaseOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinancePurchaseOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinancePurchaseOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinancePurchaseOrderRequest proto.InternalMessageInfo

func (m *MsgFinancePurchaseOrderRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinancePurchaseOrderRequest) GetPurchaseorderId() string {
	if m != nil {
		return m.PurchaseorderId
	}
	return ""
}

// MsgFinancePurchaseOrderResponse is the Msg/FinancePurchaseOrder response
// type.
type MsgFinancePurchaseOrderResponse struct {
}

func (m *MsgFinancePurchaseOrderResponse) Reset()         { *m = MsgFinancePurchaseOrderResponse{} }
func (m *MsgFinancePurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinancePurchaseOrderResponse) ProtoMessage()    {}
func (*MsgFinancePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79676422848d34be, []int{15}
}
func (m *MsgFinancePurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinancePurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinancePurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinancePurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinancePurchaseOrderResponse.Merge(m, src)
}
func (m *MsgFinancePurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinancePurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinancePurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinancePurchaseOrderResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("stateset.purchaseorder.v1beta1.State", State_name, State_value)
	proto.RegisterType((*PurchaseOrder)(nil), "stateset.purchaseorder.v1beta1.PurchaseOrder")
	proto.RegisterType((*PurchaseOrderFilters)(nil), "stateset.purchaseorder.v1beta1.PurchaseOrderFilters")
	proto.RegisterType((*MsgCreatePurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgCreatePurchaseOrderRequest")
	proto.RegisterType((*MsgCreatePurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgCreatePurchaseOrderResponse")
	proto.RegisterType((*MsgUpdatePurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgUpdatePurchaseOrderRequest")
	proto.RegisterType((*MsgUpdatePurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgUpdatePurchaseOrderResponse")
	proto.RegisterType((*MsgDeletePurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgDeletePurchaseOrderRequest")
	proto.RegisterType((*MsgDeletePurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgDeletePurchaseOrderResponse")
	proto.RegisterType((*MsgCompletePurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgCompletePurchaseOrderRequest")
	proto.RegisterType((*MsgCompletePurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgCompletePurchaseOrderResponse")
	proto.RegisterType((*MsgCancelPurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgCancelPurchaseOrderRequest")
	proto.RegisterType((*MsgCancelPurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgCancelPurchaseOrderResponse")
	proto.RegisterType((*MsgLockPurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgLockPurchaseOrderRequest")
	proto.RegisterType((*MsgLockPurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgLockPurchaseOrderResponse")
	proto.RegisterType((*MsgFinancePurchaseOrderRequest)(nil), "stateset.purchaseorder.v1beta1.MsgFinancePurchaseOrderRequest")
	proto.RegisterType((*MsgFinancePurchaseOrderResponse)(nil), "stateset.purchaseorder.v1beta1.MsgFinancePurchaseOrderResponse")
}

func init() {
	proto.RegisterFile("stateset/purchaseorder/v1beta1/tx.proto", fileDescriptor_79676422848d34be)
}

var fileDescriptor_79676422848d34be = []byte{
	// 887 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0x37, 0xbf, 0xa7, 0x09, 0x84, 0x21, 0x42, 0x5e, 0xd3, 0x75, 0x4c, 0x38, 0x00, 0x2b,
	0x35, 0x51, 0xe1, 0xb6, 0xfc, 0x58, 0xb4, 0x5d, 0x55, 0xac, 0xd8, 0x2c, 0x28, 0x88, 0x0b, 0x97,
	0x65, 0xe2, 0x99, 0x24, 0xd6, 0x3a, 0x1e, 0x33, 0x33, 0x09, 0xdb, 0x0b, 0x12, 0xa7, 0xa2, 0x48,
	0x48, 0xfc, 0x03, 0x91, 0x90, 0xf8, 0x4b, 0xb8, 0x71, 0x42, 0x3d, 0x72, 0xaa, 0x50, 0x7b, 0x41,
	0x1c, 0xb9, 0x70, 0x45, 0x33, 0x63, 0xb7, 0x35, 0x75, 0x22, 0x37, 0xb4, 0xa8, 0x87, 0xde, 0xfc,
	0xde, 0xfb, 0x9e, 0xdf, 0x37, 0x9e, 0xcf, 0x9f, 0x3d, 0xe0, 0x0d, 0x2e, 0x90, 0x20, 0x9c, 0x88,
	0x6e, 0x38, 0x65, 0xee, 0x18, 0x71, 0x42, 0x19, 0x26, 0xac, 0x3b, 0xdb, 0x1e, 0x10, 0x81, 0xb6,
	0xbb, 0xe2, 0x79, 0x27, 0x64, 0x54, 0x50, 0x68, 0xc7, 0xc0, 0x4e, 0x02, 0xd8, 0x89, 0x80, 0x56,
	0x73, 0x44, 0x47, 0x54, 0x41, 0xbb, 0xf2, 0x4a, 0x77, 0xb5, 0xff, 0xce, 0x83, 0xfa, 0xa7, 0x11,
	0xfe, 0x13, 0x89, 0x87, 0x26, 0x28, 0xbb, 0x8c, 0x20, 0x41, 0x99, 0x69, 0x38, 0xc6, 0x9b, 0xd5,
	0x7e, 0x1c, 0xc2, 0xb7, 0x40, 0x23, 0x71, 0xeb, 0xa7, 0x1e, 0x36, 0x6f, 0x29, 0xc8, 0x8b, 0x89,
	0xfc, 0x23, 0x0c, 0xb7, 0x41, 0x33, 0x09, 0x0d, 0xa6, 0x93, 0x01, 0x61, 0x66, 0x5e, 0xc1, 0x5f,
	0x4e, 0xd4, 0x9e, 0xa8, 0x12, 0xdc, 0x02, 0x30, 0xd9, 0x32, 0x46, 0x7c, 0x6c, 0x16, 0x54, 0xc3,
	0x4b, 0x89, 0xca, 0x47, 0x88, 0x8f, 0xcf, 0x4f, 0x90, 0xcb, 0x9f, 0x72, 0xb3, 0x98, 0x32, 0xe1,
	0x33, 0x55, 0x82, 0x0e, 0xd8, 0xc0, 0x84, 0xbb, 0xcc, 0x0b, 0x85, 0x47, 0x03, 0xb3, 0xa4, 0x90,
	0x67, 0x53, 0xf0, 0x75, 0x50, 0x8f, 0x1b, 0x9f, 0x62, 0x24, 0x88, 0x59, 0x56, 0x98, 0x5a, 0x9c,
	0x7c, 0x88, 0x04, 0x91, 0x20, 0x4c, 0x7c, 0x6f, 0x46, 0xd8, 0x9e, 0x06, 0x55, 0x34, 0x28, 0x4e,
	0x2a, 0x90, 0x05, 0x2a, 0x7c, 0x3a, 0x10, 0x54, 0x20, 0xdf, 0xac, 0xaa, 0xfa, 0x49, 0x0c, 0x9b,
	0xa0, 0xa8, 0x0b, 0x40, 0x15, 0x74, 0x00, 0x37, 0x41, 0x35, 0x1e, 0xc3, 0xcc, 0x0d, 0x55, 0x39,
	0x4d, 0xc0, 0x57, 0x40, 0x69, 0x46, 0x02, 0x4c, 0x99, 0x59, 0x53, 0xa5, 0x28, 0x92, 0x5d, 0xc3,
	0xa9, 0x3f, 0xf4, 0x7c, 0x9f, 0x30, 0xb3, 0xae, 0xbb, 0x4e, 0x12, 0x92, 0xc5, 0xd0, 0x0b, 0x50,
	0xe0, 0x12, 0x66, 0xbe, 0xa0, 0x59, 0xc4, 0x71, 0xfb, 0x1b, 0xd0, 0x4c, 0x6c, 0xfc, 0xae, 0xe7,
	0x0b, 0xc2, 0x38, 0xec, 0x82, 0x22, 0xfd, 0x3a, 0x20, 0xd1, 0xee, 0x3f, 0xb8, 0xfd, 0xe7, 0x61,
	0x4b, 0x27, 0xfe, 0x3a, 0x6c, 0xd5, 0xf6, 0xd0, 0xc4, 0xbf, 0xd7, 0x56, 0x61, 0xbb, 0xaf, 0xd3,
	0xb2, 0x41, 0x49, 0x4f, 0x6b, 0x41, 0x37, 0xa8, 0xc4, 0x69, 0x83, 0x0a, 0xdb, 0x7d, 0x9d, 0xbe,
	0x57, 0xf8, 0xe3, 0xc7, 0x56, 0xae, 0xbd, 0x5f, 0x00, 0x77, 0x7a, 0x7c, 0xb4, 0x23, 0xc5, 0x45,
	0x12, 0x4c, 0xfa, 0xe4, 0xab, 0x29, 0xe1, 0xe2, 0xfa, 0x28, 0x31, 0x40, 0x13, 0x92, 0xaa, 0xc4,
	0x27, 0x68, 0x42, 0x6e, 0x94, 0xf8, 0x5f, 0x95, 0xf8, 0x31, 0xb0, 0x97, 0x09, 0x81, 0x87, 0x34,
	0xe0, 0x24, 0x75, 0xbf, 0x8d, 0xd4, 0xfd, 0x8e, 0x65, 0xf5, 0x79, 0x88, 0xaf, 0xbd, 0xac, 0x6e,
	0x0c, 0xee, 0x7f, 0x90, 0x55, 0xaa, 0x10, 0x2e, 0x2e, 0x2b, 0xac, 0x54, 0xf5, 0x90, 0xf8, 0xe4,
	0xd2, 0x54, 0x55, 0x38, 0x3f, 0x45, 0x53, 0x4e, 0x9d, 0x72, 0x71, 0xca, 0x43, 0xd0, 0x92, 0xaf,
	0x15, 0x9d, 0x84, 0x97, 0x48, 0x3a, 0x65, 0x4e, 0x0f, 0x38, 0xcb, 0xe7, 0xac, 0xfb, 0xa4, 0x77,
	0xe4, 0x1e, 0xfa, 0x57, 0x47, 0x3a, 0xf2, 0x9c, 0xb4, 0x29, 0x17, 0xa7, 0x3c, 0x00, 0xaf, 0xf6,
	0xf8, 0xe8, 0x31, 0x75, 0x9f, 0x5d, 0x1d, 0x61, 0x1b, 0x6c, 0xa6, 0xcf, 0xd0, 0x74, 0xdb, 0x44,
	0x2d, 0x68, 0x57, 0x8b, 0xff, 0xea, 0x68, 0xbc, 0xa6, 0x44, 0x95, 0x3e, 0x46, 0x33, 0xb9, 0xfb,
	0xb3, 0x01, 0x8a, 0xd2, 0x90, 0x08, 0xbc, 0x0b, 0xca, 0x5e, 0x30, 0x43, 0xbe, 0x87, 0x1b, 0x39,
	0xeb, 0xce, 0x7c, 0xe1, 0xdc, 0x4e, 0x74, 0x28, 0xd0, 0x23, 0x0d, 0x90, 0xec, 0x98, 0x26, 0xda,
	0x30, 0xac, 0x8d, 0xf9, 0xc2, 0x29, 0xc7, 0xbc, 0x37, 0x41, 0xd5, 0x8d, 0xc4, 0x85, 0x1b, 0xb7,
	0xac, 0xfa, 0x7c, 0xe1, 0x54, 0x63, 0xb5, 0x61, 0xe9, 0x00, 0xae, 0xda, 0x45, 0x82, 0x1b, 0x79,
	0xab, 0x36, 0x5f, 0x38, 0x95, 0x9d, 0x28, 0x96, 0x9e, 0xe2, 0x53, 0xf7, 0x19, 0xc1, 0x8d, 0x82,
	0x05, 0xe6, 0x0b, 0xa7, 0xf4, 0x58, 0x45, 0x67, 0x5c, 0x03, 0x37, 0x8a, 0xba, 0x27, 0x5a, 0x11,
	0xb6, 0x0a, 0xdf, 0xfd, 0x64, 0xe7, 0xde, 0xfe, 0xb5, 0x0c, 0xf2, 0x3d, 0x3e, 0x82, 0xfb, 0x06,
	0x28, 0xe9, 0x0f, 0x13, 0x7c, 0xbf, 0xb3, 0xfa, 0x07, 0xbb, 0xb3, 0xf2, 0x67, 0xc6, 0xfa, 0x60,
	0xdd, 0xf6, 0x48, 0x8e, 0x92, 0x89, 0xf6, 0xb2, 0x4c, 0x4c, 0x96, 0x7f, 0xff, 0x32, 0x31, 0x59,
	0xe5, 0x9a, 0x92, 0x89, 0xb6, 0xa8, 0x4c, 0x4c, 0x96, 0x7b, 0x66, 0x26, 0x26, 0xab, 0xcc, 0xf0,
	0x7b, 0x03, 0x54, 0x62, 0x25, 0xc0, 0xfb, 0x59, 0x1e, 0xf0, 0x0a, 0x33, 0xb4, 0x3e, 0x5c, 0xff,
	0x06, 0x67, 0x9e, 0x8c, 0x16, 0x5f, 0x36, 0xb5, 0x2c, 0xf5, 0xb8, 0x6c, 0x6a, 0x59, 0x61, 0x5e,
	0xdf, 0x1a, 0xa0, 0x20, 0xc5, 0x0e, 0xdf, 0xcd, 0x70, 0xa3, 0x65, 0xc6, 0x65, 0xbd, 0xb7, 0x5e,
	0x73, 0xc4, 0x61, 0x6e, 0x80, 0x72, 0xf4, 0x5a, 0xc1, 0x2c, 0xeb, 0x59, 0xe1, 0x5d, 0xd6, 0xfd,
	0xb5, 0xfb, 0x35, 0x99, 0x07, 0x5f, 0xfe, 0x72, 0x64, 0x1b, 0x07, 0x47, 0xb6, 0xf1, 0xfb, 0x91,
	0x6d, 0xfc, 0x70, 0x6c, 0xe7, 0x0e, 0x8e, 0xed, 0xdc, 0x6f, 0xc7, 0x76, 0xee, 0x8b, 0xdd, 0x91,
	0x27, 0xc6, 0xd3, 0x41, 0xc7, 0xa5, 0x93, 0xee, 0xc9, 0x59, 0x3b, 0xbe, 0xd8, 0x1a, 0x48, 0x03,
	0x71, 0xc7, 0xc8, 0x0b, 0xb6, 0xb8, 0x40, 0x2c, 0xa4, 0x4c, 0x74, 0x9f, 0xff, 0xeb, 0x28, 0x2e,
	0xf6, 0x42, 0xc2, 0x07, 0x25, 0x75, 0xa0, 0x7e, 0xe7, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdd,
	0x0b, 0xca, 0x48, 0xb1, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Create defines a method to create a new purchase order.
	Create(ctx context.Context, in *MsgCreatePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCreatePurchaseOrderResponse, error)
	// Update defines a method to update a purchase order.
	Update(ctx context.Context, in *MsgUpdatePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgUpdatePurchaseOrderResponse, error)
	// Delete defines a method to delete a purchase order.
	Delete(ctx context.Context, in *MsgDeletePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgDeletePurchaseOrderResponse, error)
	// Complete defines a method to complete a purchase order
	Complete(ctx context.Context, in *MsgCompletePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCompletePurchaseOrderResponse, error)
	// Cancel defines a method to cancel a purchase order
	Cancel(ctx context.Context, in *MsgCancelPurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCancelPurchaseOrderResponse, error)
	// Lock defines a method to lock a purchase order
	Lock(ctx context.Context, in *MsgLockPurchaseOrderRequest, opts ...grpc.CallOption) (*MsgLockPurchaseOrderResponse, error)
	// Finance defines a method to finance a purchase order
	Finance(ctx context.Context, in *MsgFinancePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgFinancePurchaseOrderResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Create(ctx context.Context, in *MsgCreatePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCreatePurchaseOrderResponse, error) {
	out := new(MsgCreatePurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Update(ctx context.Context, in *MsgUpdatePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgUpdatePurchaseOrderResponse, error) {
	out := new(MsgUpdatePurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Delete(ctx context.Context, in *MsgDeletePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgDeletePurchaseOrderResponse, error) {
	out := new(MsgDeletePurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Complete(ctx context.Context, in *MsgCompletePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCompletePurchaseOrderResponse, error) {
	out := new(MsgCompletePurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Cancel(ctx context.Context, in *MsgCancelPurchaseOrderRequest, opts ...grpc.CallOption) (*MsgCancelPurchaseOrderResponse, error) {
	out := new(MsgCancelPurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Lock(ctx context.Context, in *MsgLockPurchaseOrderRequest, opts ...grpc.CallOption) (*MsgLockPurchaseOrderResponse, error) {
	out := new(MsgLockPurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Finance(ctx context.Context, in *MsgFinancePurchaseOrderRequest, opts ...grpc.CallOption) (*MsgFinancePurchaseOrderResponse, error) {
	out := new(MsgFinancePurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/stateset.purchaseorder.v1beta1.Msg/Finance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Create defines a method to create a new purchase order.
	Create(context.Context, *MsgCreatePurchaseOrderRequest) (*MsgCreatePurchaseOrderResponse, error)
	// Update defines a method to update a purchase order.
	Update(context.Context, *MsgUpdatePurchaseOrderRequest) (*MsgUpdatePurchaseOrderResponse, error)
	// Delete defines a method to delete a purchase order.
	Delete(context.Context, *MsgDeletePurchaseOrderRequest) (*MsgDeletePurchaseOrderResponse, error)
	// Complete defines a method to complete a purchase order
	Complete(context.Context, *MsgCompletePurchaseOrderRequest) (*MsgCompletePurchaseOrderResponse, error)
	// Cancel defines a method to cancel a purchase order
	Cancel(context.Context, *MsgCancelPurchaseOrderRequest) (*MsgCancelPurchaseOrderResponse, error)
	// Lock defines a method to lock a purchase order
	Lock(context.Context, *MsgLockPurchaseOrderRequest) (*MsgLockPurchaseOrderResponse, error)
	// Finance defines a method to finance a purchase order
	Finance(context.Context, *MsgFinancePurchaseOrderRequest) (*MsgFinancePurchaseOrderResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Create(ctx context.Context, req *MsgCreatePurchaseOrderRequest) (*MsgCreatePurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMsgServer) Update(ctx context.Context, req *MsgUpdatePurchaseOrderRequest) (*MsgUpdatePurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedMsgServer) Delete(ctx context.Context, req *MsgDeletePurchaseOrderRequest) (*MsgDeletePurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedMsgServer) Complete(ctx context.Context, req *MsgCompletePurchaseOrderRequest) (*MsgCompletePurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}
func (*UnimplementedMsgServer) Cancel(ctx context.Context, req *MsgCancelPurchaseOrderRequest) (*MsgCancelPurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}
func (*UnimplementedMsgServer) Lock(ctx context.Context, req *MsgLockPurchaseOrderRequest) (*MsgLockPurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedMsgServer) Finance(ctx context.Context, req *MsgFinancePurchaseOrderRequest) (*MsgFinancePurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Finance not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Create(ctx, req.(*MsgCreatePurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Update(ctx, req.(*MsgUpdatePurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Delete(ctx, req.(*MsgDeletePurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCompletePurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Complete(ctx, req.(*MsgCompletePurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelPurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Cancel(ctx, req.(*MsgCancelPurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLockPurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Lock(ctx, req.(*MsgLockPurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Finance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinancePurchaseOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Finance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.purchaseorder.v1beta1.Msg/Finance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Finance(ctx, req.(*MsgFinancePurchaseOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stateset.purchaseorder.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Msg_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Msg_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Msg_Delete_Handler,
		},
		{
			MethodName: "Complete",
			Handler:    _Msg_Complete_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Msg_Cancel_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _Msg_Lock_Handler,
		},
		{
			MethodName: "Finance",
			Handler:    _Msg_Finance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stateset/purchaseorder/v1beta1/tx.proto",
}

func (m *PurchaseOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PurchaseOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PurchaseOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Financer) > 0 {
		i -= len(m.Financer)
		copy(dAtA[i:], m.Financer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Financer)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Fulfiller) > 0 {
		i -= len(m.Fulfiller)
		copy(dAtA[i:], m.Fulfiller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Fulfiller)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Vendor) > 0 {
		i -= len(m.Vendor)
		copy(dAtA[i:], m.Vendor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vendor)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Total) > 0 {
		i -= len(m.Total)
		copy(dAtA[i:], m.Total)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Total)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Subtotal) > 0 {
		i -= len(m.Subtotal)
		copy(dAtA[i:], m.Subtotal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subtotal)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DeliveryDate) > 0 {
		i -= len(m.DeliveryDate)
		copy(dAtA[i:], m.DeliveryDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeliveryDate)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PurchaseDate) > 0 {
		i -= len(m.PurchaseDate)
		copy(dAtA[i:], m.PurchaseDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PurchaseorderStatus) > 0 {
		i -= len(m.PurchaseorderStatus)
		copy(dAtA[i:], m.PurchaseorderStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderStatus)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PurchaseorderHash) > 0 {
		i -= len(m.PurchaseorderHash)
		copy(dAtA[i:], m.PurchaseorderHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PurchaseorderNumber) > 0 {
		i -= len(m.PurchaseorderNumber)
		copy(dAtA[i:], m.PurchaseorderNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PurchaseOrderFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PurchaseOrderFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PurchaseOrderFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Financer) > 0 {
		i -= len(m.Financer)
		copy(dAtA[i:], m.Financer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Financer)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Fulfiller) > 0 {
		i -= len(m.Fulfiller)
		copy(dAtA[i:], m.Fulfiller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Fulfiller)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Vendor) > 0 {
		i -= len(m.Vendor)
		copy(dAtA[i:], m.Vendor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vendor)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Total) > 0 {
		i -= len(m.Total)
		copy(dAtA[i:], m.Total)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Total)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Subtotal) > 0 {
		i -= len(m.Subtotal)
		copy(dAtA[i:], m.Subtotal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subtotal)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DeliveryDate) > 0 {
		i -= len(m.DeliveryDate)
		copy(dAtA[i:], m.DeliveryDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeliveryDate)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PurchaseDate) > 0 {
		i -= len(m.PurchaseDate)
		copy(dAtA[i:], m.PurchaseDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PurchaseorderStatus) > 0 {
		i -= len(m.PurchaseorderStatus)
		copy(dAtA[i:], m.PurchaseorderStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderStatus)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PurchaseorderName) > 0 {
		i -= len(m.PurchaseorderName)
		copy(dAtA[i:], m.PurchaseorderName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PurchaseorderNumber) > 0 {
		i -= len(m.PurchaseorderNumber)
		copy(dAtA[i:], m.PurchaseorderNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Financer) > 0 {
		i -= len(m.Financer)
		copy(dAtA[i:], m.Financer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Financer)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Fulfiller) > 0 {
		i -= len(m.Fulfiller)
		copy(dAtA[i:], m.Fulfiller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Fulfiller)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Vendor) > 0 {
		i -= len(m.Vendor)
		copy(dAtA[i:], m.Vendor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vendor)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Total) > 0 {
		i -= len(m.Total)
		copy(dAtA[i:], m.Total)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Total)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Subtotal) > 0 {
		i -= len(m.Subtotal)
		copy(dAtA[i:], m.Subtotal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Subtotal)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DeliveryDate) > 0 {
		i -= len(m.DeliveryDate)
		copy(dAtA[i:], m.DeliveryDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeliveryDate)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PurchaseDate) > 0 {
		i -= len(m.PurchaseDate)
		copy(dAtA[i:], m.PurchaseDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PurchaseorderStatus) > 0 {
		i -= len(m.PurchaseorderStatus)
		copy(dAtA[i:], m.PurchaseorderStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderStatus)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PurchaseorderHash) > 0 {
		i -= len(m.PurchaseorderHash)
		copy(dAtA[i:], m.PurchaseorderHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PurchaseorderNumber) > 0 {
		i -= len(m.PurchaseorderNumber)
		copy(dAtA[i:], m.PurchaseorderNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PurchaseorderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PurchaseorderId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompletePurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompletePurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompletePurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompletePurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompletePurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompletePurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelPurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelPurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelPurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelPurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelPurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelPurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLockPurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLockPurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLockPurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLockPurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLockPurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLockPurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinancePurchaseOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinancePurchaseOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinancePurchaseOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaseorderId) > 0 {
		i -= len(m.PurchaseorderId)
		copy(dAtA[i:], m.PurchaseorderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaseorderId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinancePurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinancePurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinancePurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PurchaseOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DeliveryDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Subtotal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Total)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vendor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Fulfiller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Financer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *PurchaseOrderFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DeliveryDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Subtotal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Total)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vendor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Fulfiller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Financer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DeliveryDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Subtotal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Total)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vendor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Fulfiller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Financer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PurchaseorderId != 0 {
		n += 1 + sovTx(uint64(m.PurchaseorderId))
	}
	return n
}

func (m *MsgDeletePurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCompletePurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCompletePurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelPurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelPurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLockPurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLockPurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinancePurchaseOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PurchaseorderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFinancePurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PurchaseOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PurchaseOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PurchaseOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeliveryDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeliveryDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtotal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtotal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Total = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fulfiller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fulfiller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Financer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Financer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PurchaseOrderFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PurchaseOrderFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PurchaseOrderFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeliveryDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeliveryDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtotal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtotal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Total = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fulfiller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fulfiller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Financer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Financer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeliveryDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeliveryDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtotal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtotal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Total = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fulfiller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fulfiller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Financer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Financer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			m.PurchaseorderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PurchaseorderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompletePurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompletePurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompletePurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompletePurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompletePurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompletePurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelPurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelPurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelPurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelPurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelPurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelPurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLockPurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLockPurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLockPurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLockPurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLockPurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLockPurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinancePurchaseOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinancePurchaseOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinancePurchaseOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseorderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaseorderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinancePurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinancePurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinancePurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
