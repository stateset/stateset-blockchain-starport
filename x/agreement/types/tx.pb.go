// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stateset/agreement/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State is an enum which refers to state of an agreement
type State int32

const (
	// Prefix should start with 0 in enum. So declaring dummy state
	AgreementStateInvalid State = 0
	Request               State = 1
	Activated             State = 2
	Amended               State = 3
	Renewed               State = 4
	Terminated            State = 5
	Expired               State = 6
)

var State_name = map[int32]string{
	0: "invalid",
	1: "request",
	2: "active",
	3: "amended",
	4: "renewed",
	5: "terminated",
	6: "expired",
}

var State_value = map[string]int32{
	"invalid":    0,
	"request":    1,
	"active":     2,
	"amended":    3,
	"renewed":    4,
	"terminated": 5,
	"expired":    6,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{0}
}

type Agreement struct {
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId         string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
	AgreementNumber     string `protobuf:"bytes,3,opt,name=agreementNumber,proto3" json:"agreementNumber,omitempty"`
	AgreementName       string `protobuf:"bytes,4,opt,name=agreementName,proto3" json:"agreementName,omitempty"`
	AgreementType       string `protobuf:"bytes,5,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	AgreementStatus     string `protobuf:"bytes,6,opt,name=agreementStatus,proto3" json:"agreementStatus,omitempty"`
	TotalAgreementValue string `protobuf:"bytes,7,opt,name=totalAgreementValue,proto3" json:"totalAgreementValue,omitempty"`
	Party               string `protobuf:"bytes,8,opt,name=party,proto3" json:"party,omitempty"`
	Counterparty        string `protobuf:"bytes,9,opt,name=counterparty,proto3" json:"counterparty,omitempty"`
	StartDate           string `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate             string `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (m *Agreement) Reset()         { *m = Agreement{} }
func (m *Agreement) String() string { return proto.CompactTextString(m) }
func (*Agreement) ProtoMessage()    {}
func (*Agreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{0}
}
func (m *Agreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Agreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Agreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Agreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agreement.Merge(m, src)
}
func (m *Agreement) XXX_Size() int {
	return m.Size()
}
func (m *Agreement) XXX_DiscardUnknown() {
	xxx_messageInfo_Agreement.DiscardUnknown(m)
}

var xxx_messageInfo_Agreement proto.InternalMessageInfo

func (m *Agreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Agreement) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *Agreement) GetAgreementNumber() string {
	if m != nil {
		return m.AgreementNumber
	}
	return ""
}

func (m *Agreement) GetAgreementName() string {
	if m != nil {
		return m.AgreementName
	}
	return ""
}

func (m *Agreement) GetAgreementType() string {
	if m != nil {
		return m.AgreementType
	}
	return ""
}

func (m *Agreement) GetAgreementStatus() string {
	if m != nil {
		return m.AgreementStatus
	}
	return ""
}

func (m *Agreement) GetTotalAgreementValue() string {
	if m != nil {
		return m.TotalAgreementValue
	}
	return ""
}

func (m *Agreement) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Agreement) GetCounterparty() string {
	if m != nil {
		return m.Counterparty
	}
	return ""
}

func (m *Agreement) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Agreement) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type AgreementFilters struct {
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner" yaml:"owner"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state" yaml:"state"`
}

func (m *AgreementFilters) Reset()         { *m = AgreementFilters{} }
func (m *AgreementFilters) String() string { return proto.CompactTextString(m) }
func (*AgreementFilters) ProtoMessage()    {}
func (*AgreementFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{1}
}
func (m *AgreementFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AgreementFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AgreementFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AgreementFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgreementFilters.Merge(m, src)
}
func (m *AgreementFilters) XXX_Size() int {
	return m.Size()
}
func (m *AgreementFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_AgreementFilters.DiscardUnknown(m)
}

var xxx_messageInfo_AgreementFilters proto.InternalMessageInfo

func (m *AgreementFilters) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *AgreementFilters) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// MsgCreateAgreementRequest is the Msg/CreateAgreement request type.
type MsgCreateAgreementRequest struct {
	Creator             string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AgreementId         string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty" yaml:"agreement_id"`
	AgreementNumber     string `protobuf:"bytes,3,opt,name=agreement_number,json=agreementNumber,proto3" json:"agreement_number,omitempty"`
	AgreementName       string `protobuf:"bytes,4,opt,name=agreement_name,json=agreementName,proto3" json:"agreement_name,omitempty"`
	AgreementType       string `protobuf:"bytes,5,opt,name=agreement_type,json=agreementType,proto3" json:"agreement_type,omitempty"`
	AgreementStatus     string `protobuf:"bytes,6,opt,name=agreement_status,json=agreementStatus,proto3" json:"agreement_status,omitempty"`
	TotalAgreementValue int32  `protobuf:"varint,7,opt,name=total_agreement_value,json=totalAgreementValue,proto3" json:"total_agreement_value,omitempty"`
	Party               string `protobuf:"bytes,8,opt,name=party,proto3" json:"party,omitempty"`
	Counterparty        string `protobuf:"bytes,9,opt,name=counterparty,proto3" json:"counterparty,omitempty"`
	StartDate           string `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate             string `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (m *MsgCreateAgreementRequest) Reset()         { *m = MsgCreateAgreementRequest{} }
func (m *MsgCreateAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAgreementRequest) ProtoMessage()    {}
func (*MsgCreateAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{2}
}
func (m *MsgCreateAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAgreementRequest.Merge(m, src)
}
func (m *MsgCreateAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAgreementRequest proto.InternalMessageInfo

func (m *MsgCreateAgreementRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetAgreementNumber() string {
	if m != nil {
		return m.AgreementNumber
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetAgreementName() string {
	if m != nil {
		return m.AgreementName
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetAgreementType() string {
	if m != nil {
		return m.AgreementType
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetAgreementStatus() string {
	if m != nil {
		return m.AgreementStatus
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetTotalAgreementValue() int32 {
	if m != nil {
		return m.TotalAgreementValue
	}
	return 0
}

func (m *MsgCreateAgreementRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetCounterparty() string {
	if m != nil {
		return m.Counterparty
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *MsgCreateAgreementRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

// MsgCreateAgreementResponse is the Msg/CreateAgreement response type.
type MsgCreateAgreementResponse struct {
	// agreement_id is the unique ID of the newly created agreement class.
	AgreementId string `protobuf:"bytes,1,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgCreateAgreementResponse) Reset()         { *m = MsgCreateAgreementResponse{} }
func (m *MsgCreateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAgreementResponse) ProtoMessage()    {}
func (*MsgCreateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{3}
}
func (m *MsgCreateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAgreementResponse.Merge(m, src)
}
func (m *MsgCreateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAgreementResponse proto.InternalMessageInfo

func (m *MsgCreateAgreementResponse) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgCreateAgreementRequest is the Msg/CreateAgreement request type.
type MsgUpdateAgreementRequest struct {
	Sender              string     `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId         string     `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty" yaml:"agreement_id"`
	AgreementNumber     string     `protobuf:"bytes,3,opt,name=agreement_number,json=agreementNumber,proto3" json:"agreement_number,omitempty"`
	AgreementName       string     `protobuf:"bytes,4,opt,name=agreement_name,json=agreementName,proto3" json:"agreement_name,omitempty"`
	AgreementType       string     `protobuf:"bytes,5,opt,name=agreement_type,json=agreementType,proto3" json:"agreement_type,omitempty"`
	AgreementStatus     string     `protobuf:"bytes,6,opt,name=agreement_status,json=agreementStatus,proto3" json:"agreement_status,omitempty"`
	TotalAgreementValue int32      `protobuf:"varint,7,opt,name=total_agreement_value,json=totalAgreementValue,proto3" json:"total_agreement_value,omitempty"`
	Party               string     `protobuf:"bytes,8,opt,name=party,proto3" json:"party,omitempty"`
	Counterparty        string     `protobuf:"bytes,9,opt,name=counterparty,proto3" json:"counterparty,omitempty"`
	StartDate           *time.Time `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3,stdtime" json:"start_date,omitempty" yaml:"start_date"`
	EndDate             *time.Time `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3,stdtime" json:"end_date,omitempty" yaml:"end_date"`
}

func (m *MsgUpdateAgreementRequest) Reset()         { *m = MsgUpdateAgreementRequest{} }
func (m *MsgUpdateAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAgreementRequest) ProtoMessage()    {}
func (*MsgUpdateAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{4}
}
func (m *MsgUpdateAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAgreementRequest.Merge(m, src)
}
func (m *MsgUpdateAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAgreementRequest proto.InternalMessageInfo

func (m *MsgUpdateAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetAgreementNumber() string {
	if m != nil {
		return m.AgreementNumber
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetAgreementName() string {
	if m != nil {
		return m.AgreementName
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetAgreementType() string {
	if m != nil {
		return m.AgreementType
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetAgreementStatus() string {
	if m != nil {
		return m.AgreementStatus
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetTotalAgreementValue() int32 {
	if m != nil {
		return m.TotalAgreementValue
	}
	return 0
}

func (m *MsgUpdateAgreementRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetCounterparty() string {
	if m != nil {
		return m.Counterparty
	}
	return ""
}

func (m *MsgUpdateAgreementRequest) GetStartDate() *time.Time {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *MsgUpdateAgreementRequest) GetEndDate() *time.Time {
	if m != nil {
		return m.EndDate
	}
	return nil
}

// MsgSignDataResponse is the Msg/SignData response type.
type MsgUpdateAgreementResponse struct {
	// agreement_id is the unique ID of the newly created agreement class.
	AgreementId string `protobuf:"bytes,1,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgUpdateAgreementResponse) Reset()         { *m = MsgUpdateAgreementResponse{} }
func (m *MsgUpdateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAgreementResponse) ProtoMessage()    {}
func (*MsgUpdateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{5}
}
func (m *MsgUpdateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAgreementResponse.Merge(m, src)
}
func (m *MsgUpdateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAgreementResponse proto.InternalMessageInfo

func (m *MsgUpdateAgreementResponse) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgDeleteAgreementRequest is the Msg/DeleteAgreement request type.
type MsgDeleteAgreementRequest struct {
	// sender is the address of the sender of the transaction.
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgDeleteAgreementRequest) Reset()         { *m = MsgDeleteAgreementRequest{} }
func (m *MsgDeleteAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAgreementRequest) ProtoMessage()    {}
func (*MsgDeleteAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{6}
}
func (m *MsgDeleteAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAgreementRequest.Merge(m, src)
}
func (m *MsgDeleteAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAgreementRequest proto.InternalMessageInfo

func (m *MsgDeleteAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgDeleteAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

type MsgDeleteAgreementResponse struct {
}

func (m *MsgDeleteAgreementResponse) Reset()         { *m = MsgDeleteAgreementResponse{} }
func (m *MsgDeleteAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAgreementResponse) ProtoMessage()    {}
func (*MsgDeleteAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{7}
}
func (m *MsgDeleteAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAgreementResponse.Merge(m, src)
}
func (m *MsgDeleteAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAgreementResponse proto.InternalMessageInfo

// MsgActivateAgreementRequest is the Msg/ActivateAgreement request type.
type MsgActivateAgreementRequest struct {
	Sender         string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId    string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty" yaml:"agreement_id"`
	ActivationDate string `protobuf:"bytes,3,opt,name=activation_date,json=activationDate,proto3" json:"activation_date,omitempty" yaml:"activation_date"`
}

func (m *MsgActivateAgreementRequest) Reset()         { *m = MsgActivateAgreementRequest{} }
func (m *MsgActivateAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgActivateAgreementRequest) ProtoMessage()    {}
func (*MsgActivateAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{8}
}
func (m *MsgActivateAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateAgreementRequest.Merge(m, src)
}
func (m *MsgActivateAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateAgreementRequest proto.InternalMessageInfo

func (m *MsgActivateAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgActivateAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

func (m *MsgActivateAgreementRequest) GetActivationDate() string {
	if m != nil {
		return m.ActivationDate
	}
	return ""
}

// MsgSignDataResponse is the Msg/SignData response type.
type MsgActivateAgreementResponse struct {
}

func (m *MsgActivateAgreementResponse) Reset()         { *m = MsgActivateAgreementResponse{} }
func (m *MsgActivateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgActivateAgreementResponse) ProtoMessage()    {}
func (*MsgActivateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{9}
}
func (m *MsgActivateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateAgreementResponse.Merge(m, src)
}
func (m *MsgActivateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateAgreementResponse proto.InternalMessageInfo

// MsgRenewRenewRequest is the Msg/RenewAgreement request type.
type MsgRenewAgreementRequest struct {
	// sender is the address of the sender of the transaction.
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgRenewAgreementRequest) Reset()         { *m = MsgRenewAgreementRequest{} }
func (m *MsgRenewAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRenewAgreementRequest) ProtoMessage()    {}
func (*MsgRenewAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{10}
}
func (m *MsgRenewAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenewAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenewAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenewAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenewAgreementRequest.Merge(m, src)
}
func (m *MsgRenewAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenewAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenewAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenewAgreementRequest proto.InternalMessageInfo

func (m *MsgRenewAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRenewAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgRenewAgreementResponse is the Msg/SignData response type.
type MsgRenewAgreementResponse struct {
}

func (m *MsgRenewAgreementResponse) Reset()         { *m = MsgRenewAgreementResponse{} }
func (m *MsgRenewAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRenewAgreementResponse) ProtoMessage()    {}
func (*MsgRenewAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{11}
}
func (m *MsgRenewAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenewAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenewAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenewAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenewAgreementResponse.Merge(m, src)
}
func (m *MsgRenewAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenewAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenewAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenewAgreementResponse proto.InternalMessageInfo

// MsgAmendAgreementRequest is the Msg/AmendAgreement request type.
type MsgAmendAgreementRequest struct {
	// sender is the address of the sender of the transaction.
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgAmendAgreementRequest) Reset()         { *m = MsgAmendAgreementRequest{} }
func (m *MsgAmendAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAmendAgreementRequest) ProtoMessage()    {}
func (*MsgAmendAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{12}
}
func (m *MsgAmendAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAmendAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAmendAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAmendAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAmendAgreementRequest.Merge(m, src)
}
func (m *MsgAmendAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAmendAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAmendAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAmendAgreementRequest proto.InternalMessageInfo

func (m *MsgAmendAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAmendAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgAmendResponse is the Msg/AmendAgreement response type.
type MsgAmendAgreementResponse struct {
}

func (m *MsgAmendAgreementResponse) Reset()         { *m = MsgAmendAgreementResponse{} }
func (m *MsgAmendAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAmendAgreementResponse) ProtoMessage()    {}
func (*MsgAmendAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{13}
}
func (m *MsgAmendAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAmendAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAmendAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAmendAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAmendAgreementResponse.Merge(m, src)
}
func (m *MsgAmendAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAmendAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAmendAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAmendAgreementResponse proto.InternalMessageInfo

// MsgTerminateAgreementRequest is the Msg/TerminateAgreement request type.
type MsgTerminateAgreementRequest struct {
	// sender is the address of the sender of the transaction.
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgTerminateAgreementRequest) Reset()         { *m = MsgTerminateAgreementRequest{} }
func (m *MsgTerminateAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateAgreementRequest) ProtoMessage()    {}
func (*MsgTerminateAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{14}
}
func (m *MsgTerminateAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateAgreementRequest.Merge(m, src)
}
func (m *MsgTerminateAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateAgreementRequest proto.InternalMessageInfo

func (m *MsgTerminateAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgTerminateAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgTerminateResponse is the Msg/TerminateAgreement response type.
type MsgTerminateAgreementResponse struct {
}

func (m *MsgTerminateAgreementResponse) Reset()         { *m = MsgTerminateAgreementResponse{} }
func (m *MsgTerminateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateAgreementResponse) ProtoMessage()    {}
func (*MsgTerminateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{15}
}
func (m *MsgTerminateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateAgreementResponse.Merge(m, src)
}
func (m *MsgTerminateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateAgreementResponse proto.InternalMessageInfo

// MsgExpireAgreementRequest is the Msg/ExpireAgreement request type.
type MsgExpireAgreementRequest struct {
	// sender is the address of the sender of the transaction.
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgExpireAgreementRequest) Reset()         { *m = MsgExpireAgreementRequest{} }
func (m *MsgExpireAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgExpireAgreementRequest) ProtoMessage()    {}
func (*MsgExpireAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{16}
}
func (m *MsgExpireAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExpireAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExpireAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExpireAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExpireAgreementRequest.Merge(m, src)
}
func (m *MsgExpireAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgExpireAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExpireAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExpireAgreementRequest proto.InternalMessageInfo

func (m *MsgExpireAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgExpireAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

// MsgExpireResponse is the Msg/ExpireAgreement response type.
type MsgExpireAgreementResponse struct {
}

func (m *MsgExpireAgreementResponse) Reset()         { *m = MsgExpireAgreementResponse{} }
func (m *MsgExpireAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExpireAgreementResponse) ProtoMessage()    {}
func (*MsgExpireAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{17}
}
func (m *MsgExpireAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExpireAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExpireAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExpireAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExpireAgreementResponse.Merge(m, src)
}
func (m *MsgExpireAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExpireAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExpireAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExpireAgreementResponse proto.InternalMessageInfo

type MsgFinanceAgreementRequest struct {
	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AgreementId string `protobuf:"bytes,2,opt,name=agreement_id,json=agreementId,proto3" json:"agreement_id,omitempty"`
}

func (m *MsgFinanceAgreementRequest) Reset()         { *m = MsgFinanceAgreementRequest{} }
func (m *MsgFinanceAgreementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgFinanceAgreementRequest) ProtoMessage()    {}
func (*MsgFinanceAgreementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{18}
}
func (m *MsgFinanceAgreementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinanceAgreementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinanceAgreementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinanceAgreementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinanceAgreementRequest.Merge(m, src)
}
func (m *MsgFinanceAgreementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinanceAgreementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinanceAgreementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinanceAgreementRequest proto.InternalMessageInfo

func (m *MsgFinanceAgreementRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgFinanceAgreementRequest) GetAgreementId() string {
	if m != nil {
		return m.AgreementId
	}
	return ""
}

type MsgFinanceAgreementResponse struct {
}

func (m *MsgFinanceAgreementResponse) Reset()         { *m = MsgFinanceAgreementResponse{} }
func (m *MsgFinanceAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinanceAgreementResponse) ProtoMessage()    {}
func (*MsgFinanceAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda869f062716651, []int{19}
}
func (m *MsgFinanceAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinanceAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinanceAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinanceAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinanceAgreementResponse.Merge(m, src)
}
func (m *MsgFinanceAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinanceAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinanceAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinanceAgreementResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("stateset.agreement.v1beta1.State", State_name, State_value)
	proto.RegisterType((*Agreement)(nil), "stateset.agreement.v1beta1.Agreement")
	proto.RegisterType((*AgreementFilters)(nil), "stateset.agreement.v1beta1.AgreementFilters")
	proto.RegisterType((*MsgCreateAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgCreateAgreementRequest")
	proto.RegisterType((*MsgCreateAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgCreateAgreementResponse")
	proto.RegisterType((*MsgUpdateAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgUpdateAgreementRequest")
	proto.RegisterType((*MsgUpdateAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgUpdateAgreementResponse")
	proto.RegisterType((*MsgDeleteAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgDeleteAgreementRequest")
	proto.RegisterType((*MsgDeleteAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgDeleteAgreementResponse")
	proto.RegisterType((*MsgActivateAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgActivateAgreementRequest")
	proto.RegisterType((*MsgActivateAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgActivateAgreementResponse")
	proto.RegisterType((*MsgRenewAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgRenewAgreementRequest")
	proto.RegisterType((*MsgRenewAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgRenewAgreementResponse")
	proto.RegisterType((*MsgAmendAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgAmendAgreementRequest")
	proto.RegisterType((*MsgAmendAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgAmendAgreementResponse")
	proto.RegisterType((*MsgTerminateAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgTerminateAgreementRequest")
	proto.RegisterType((*MsgTerminateAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgTerminateAgreementResponse")
	proto.RegisterType((*MsgExpireAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgExpireAgreementRequest")
	proto.RegisterType((*MsgExpireAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgExpireAgreementResponse")
	proto.RegisterType((*MsgFinanceAgreementRequest)(nil), "stateset.agreement.v1beta1.MsgFinanceAgreementRequest")
	proto.RegisterType((*MsgFinanceAgreementResponse)(nil), "stateset.agreement.v1beta1.MsgFinanceAgreementResponse")
}

func init() {
	proto.RegisterFile("stateset/agreement/v1beta1/tx.proto", fileDescriptor_dda869f062716651)
}

var fileDescriptor_dda869f062716651 = []byte{
	// 1051 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4d, 0x8f, 0xdb, 0xc4,
	0x1b, 0x8f, 0x9b, 0xb7, 0xcd, 0xb3, 0xdb, 0xdd, 0xfc, 0xa7, 0x2f, 0x7f, 0xc7, 0xed, 0x26, 0xc1,
	0xbc, 0xa8, 0x20, 0x91, 0xd0, 0x85, 0x52, 0xba, 0x17, 0x94, 0xb4, 0x54, 0xea, 0x61, 0x7b, 0x48,
	0xb7, 0x45, 0x70, 0x59, 0x4d, 0xe2, 0x07, 0xd7, 0x22, 0xb6, 0x83, 0x3d, 0xd9, 0xec, 0x56, 0x42,
	0xe2, 0x88, 0xf6, 0x80, 0xfa, 0x05, 0x56, 0x42, 0xe2, 0xc0, 0x37, 0xe0, 0xc6, 0x9d, 0x63, 0x25,
	0x2e, 0x3d, 0x05, 0xb4, 0x7b, 0x41, 0x1c, 0xf7, 0x13, 0x20, 0xcf, 0xd8, 0x4e, 0x9c, 0xd8, 0x6b,
	0x82, 0x02, 0xe2, 0xc0, 0xcd, 0xcf, 0xeb, 0x6f, 0x3c, 0xcf, 0x6f, 0x7e, 0x1e, 0xc3, 0xab, 0x2e,
	0xa3, 0x0c, 0x5d, 0x64, 0x4d, 0xaa, 0x3b, 0x88, 0x26, 0x5a, 0xac, 0xb9, 0x7f, 0xb3, 0x8b, 0x8c,
	0xde, 0x6c, 0xb2, 0x83, 0xc6, 0xc0, 0xb1, 0x99, 0x4d, 0x94, 0x20, 0xa9, 0x11, 0x26, 0x35, 0xfc,
	0x24, 0xe5, 0xb2, 0x6e, 0xeb, 0x36, 0x4f, 0x6b, 0x7a, 0x4f, 0xa2, 0x42, 0xa9, 0xe9, 0xb6, 0xad,
	0xf7, 0xb1, 0xc9, 0xad, 0xee, 0xf0, 0xb3, 0x26, 0x33, 0x4c, 0x74, 0x19, 0x35, 0x07, 0x22, 0x41,
	0xfd, 0x26, 0x0b, 0xa5, 0x56, 0xd0, 0x8c, 0xc8, 0x50, 0xec, 0x39, 0x48, 0x99, 0xed, 0xc8, 0x52,
	0x5d, 0xba, 0x51, 0xea, 0x04, 0x26, 0x79, 0x05, 0xd6, 0x42, 0xcc, 0x3d, 0x43, 0x93, 0x2f, 0xf0,
	0xf0, 0x6a, 0xe8, 0x7b, 0xa0, 0x91, 0x1b, 0xb0, 0x11, 0x9a, 0x0f, 0x87, 0x66, 0x17, 0x1d, 0x39,
	0xcb, 0xb3, 0x66, 0xdd, 0xe4, 0x35, 0xb8, 0x38, 0x71, 0x51, 0x13, 0xe5, 0x1c, 0xcf, 0x8b, 0x3a,
	0x23, 0x59, 0xbb, 0x87, 0x03, 0x94, 0xf3, 0x33, 0x59, 0x9e, 0x33, 0x82, 0xfa, 0x88, 0x51, 0x36,
	0x74, 0xe5, 0xc2, 0x0c, 0xaa, 0x70, 0x93, 0x77, 0xe0, 0x12, 0xb3, 0x19, 0xed, 0x87, 0xaf, 0xfb,
	0x84, 0xf6, 0x87, 0x28, 0x17, 0x79, 0x76, 0x5c, 0x88, 0x5c, 0x86, 0xfc, 0x80, 0x3a, 0xec, 0x50,
	0x5e, 0xe1, 0x39, 0xc2, 0x20, 0x2a, 0xac, 0xf5, 0xec, 0xa1, 0xc5, 0xd0, 0x11, 0xc1, 0x12, 0x0f,
	0x46, 0x7c, 0x64, 0x13, 0xc0, 0x65, 0xd4, 0x61, 0x7b, 0x1a, 0x65, 0x28, 0x03, 0xcf, 0x28, 0x71,
	0xcf, 0x3d, 0xca, 0x90, 0x54, 0x60, 0x05, 0x2d, 0x4d, 0x04, 0x57, 0xc5, 0x46, 0xa3, 0xa5, 0x79,
	0x21, 0xf5, 0x19, 0x94, 0xc3, 0x55, 0xdc, 0x37, 0xfa, 0x0c, 0x1d, 0x97, 0x34, 0x21, 0x6f, 0x8f,
	0x2c, 0xf4, 0x87, 0xd2, 0xae, 0xfc, 0x3e, 0xae, 0x09, 0xc7, 0xd9, 0xb8, 0xb6, 0x76, 0x48, 0xcd,
	0xfe, 0xb6, 0xca, 0x4d, 0xb5, 0x23, 0xdc, 0x5e, 0x01, 0xa7, 0x8a, 0x18, 0x93, 0x28, 0xe0, 0x8e,
	0x49, 0x01, 0x37, 0xd5, 0x8e, 0x70, 0x6f, 0xe7, 0x7e, 0xfb, 0xb6, 0x96, 0x51, 0x7f, 0xcc, 0x42,
	0x65, 0xc7, 0xd5, 0xef, 0x7a, 0x33, 0xc7, 0x70, 0x15, 0x1d, 0xfc, 0x62, 0x88, 0xee, 0x79, 0xe4,
	0xd8, 0x8e, 0x23, 0x47, 0xfb, 0xff, 0x67, 0xe3, 0xda, 0x25, 0x01, 0x36, 0x1d, 0x55, 0xa3, 0xac,
	0x79, 0x13, 0xca, 0x93, 0xa8, 0x75, 0x2e, 0x6d, 0x5e, 0x87, 0xf5, 0xa9, 0xd4, 0x44, 0xde, 0x44,
	0xd2, 0x58, 0x22, 0x71, 0x22, 0xc0, 0xee, 0xb9, 0xcc, 0xd9, 0x82, 0x2b, 0x9c, 0x1e, 0x7b, 0x93,
	0x82, 0xfd, 0x90, 0x3b, 0xf9, 0x7f, 0x0f, 0x77, 0x3e, 0x04, 0x25, 0x6e, 0x7c, 0xee, 0xc0, 0xb6,
	0x5c, 0x9c, 0x3b, 0xc2, 0xd2, 0xdc, 0x11, 0x56, 0xbf, 0xcf, 0x71, 0x02, 0x3c, 0x1e, 0x68, 0x71,
	0x04, 0xb8, 0x0a, 0x05, 0x17, 0x2d, 0x2d, 0xe0, 0x61, 0xc7, 0xb7, 0xfe, 0x1b, 0xff, 0x52, 0xc7,
	0xbf, 0x3b, 0x37, 0xfe, 0xd5, 0x2d, 0xa5, 0x21, 0x74, 0xbc, 0x11, 0xe8, 0x78, 0x63, 0x37, 0xd0,
	0xf1, 0x76, 0xe5, 0x6c, 0x5c, 0xfb, 0x5f, 0x78, 0xa6, 0xfd, 0x3a, 0xf5, 0xf9, 0x2f, 0x35, 0x69,
	0x9a, 0x35, 0x0f, 0x67, 0x58, 0x73, 0x7e, 0x4f, 0x6f, 0x76, 0x1b, 0xa2, 0x67, 0x50, 0x25, 0x3a,
	0xce, 0x50, 0x6d, 0x8e, 0x28, 0x7f, 0x9e, 0x6a, 0x4f, 0x38, 0xd3, 0xee, 0x61, 0x1f, 0x17, 0x60,
	0x5a, 0xfa, 0x57, 0x48, 0xbd, 0xce, 0x17, 0x36, 0xd7, 0x57, 0x2c, 0x4c, 0xfd, 0x41, 0x82, 0x6b,
	0x3b, 0xae, 0xde, 0xea, 0x31, 0x63, 0xff, 0x9f, 0xa2, 0xf8, 0x5d, 0xd8, 0xa0, 0x02, 0xcf, 0xb0,
	0x2d, 0x31, 0x01, 0xce, 0xf0, 0xb6, 0x72, 0x36, 0xae, 0x5d, 0xf5, 0xcb, 0xa3, 0x09, 0x6a, 0x67,
	0x7d, 0xe2, 0xe1, 0xfb, 0x5d, 0x85, 0xeb, 0xf1, 0xeb, 0xf6, 0x5f, 0xec, 0x31, 0xc8, 0x3b, 0xae,
	0xde, 0x41, 0x0b, 0x47, 0xcb, 0xdc, 0xcd, 0x6b, 0x7c, 0x4a, 0xb3, 0x6d, 0x23, 0x98, 0x2d, 0x13,
	0x2d, 0x6d, 0xf9, 0x98, 0xb3, 0x6d, 0x7d, 0xcc, 0x4f, 0xf8, 0x3e, 0xec, 0xa2, 0x63, 0x1a, 0x16,
	0x5d, 0x2e, 0x73, 0x6a, 0xb0, 0x99, 0xd0, 0xda, 0xc7, 0x16, 0x94, 0xfd, 0xe8, 0x60, 0x60, 0x38,
	0x7f, 0x03, 0x65, 0xe7, 0xfa, 0xfa, 0xa8, 0x1f, 0xf3, 0xe8, 0x7d, 0xc3, 0xa2, 0x56, 0x6f, 0xa9,
	0xb0, 0x9b, 0xfc, 0x28, 0xcc, 0x37, 0x16, 0xb8, 0x6f, 0xbd, 0x94, 0x20, 0xef, 0x09, 0x20, 0x92,
	0x37, 0xa0, 0x68, 0x58, 0xfb, 0xb4, 0x6f, 0x68, 0xe5, 0x8c, 0x52, 0x39, 0x3a, 0xae, 0x5f, 0x69,
	0x4d, 0x2b, 0x24, 0x3e, 0x10, 0x41, 0xef, 0x82, 0xe0, 0x88, 0x65, 0x95, 0x25, 0x65, 0xf5, 0xe8,
	0xb8, 0x5e, 0x0c, 0x56, 0x59, 0x81, 0x02, 0xe7, 0x33, 0x96, 0x2f, 0x28, 0x17, 0x8f, 0x8e, 0xeb,
	0xa5, 0x80, 0xc8, 0xbc, 0x88, 0x7a, 0xa3, 0x46, 0xad, 0x9c, 0x15, 0x45, 0x2d, 0x61, 0x8a, 0x76,
	0x16, 0x8e, 0x50, 0x2b, 0xe7, 0x82, 0x76, 0xdc, 0x24, 0x55, 0x00, 0x16, 0x8c, 0x49, 0x2b, 0xe7,
	0x95, 0xf5, 0xa3, 0xe3, 0x3a, 0x84, 0x83, 0xe3, 0x95, 0xc8, 0x77, 0x53, 0x2b, 0x17, 0x44, 0xa5,
	0xd8, 0x5c, 0x4d, 0xc9, 0x7d, 0xfd, 0x5d, 0x35, 0xb3, 0xf5, 0xf3, 0x0a, 0x64, 0x77, 0x5c, 0x9d,
	0x8c, 0xa0, 0x20, 0x3e, 0x96, 0xe4, 0x56, 0x23, 0xf9, 0x6a, 0xdd, 0x48, 0xbc, 0x12, 0x29, 0xef,
	0x2f, 0x5a, 0xe6, 0xeb, 0xe3, 0x08, 0x0a, 0x42, 0x3a, 0x53, 0x81, 0xe3, 0x3f, 0xc5, 0xa9, 0xc0,
	0x49, 0xc2, 0x3c, 0x82, 0x82, 0x90, 0xc6, 0x54, 0xe0, 0x78, 0x65, 0x4e, 0x05, 0x4e, 0x10, 0x5e,
	0xf2, 0x25, 0xac, 0x04, 0x33, 0x27, 0xb7, 0x53, 0x7a, 0x24, 0xa9, 0xb3, 0xf2, 0xc1, 0xe2, 0x85,
	0x3e, 0x3c, 0x83, 0x3c, 0x27, 0x0f, 0x79, 0x2f, 0xa5, 0x45, 0xac, 0x82, 0x2a, 0xb7, 0x16, 0xac,
	0x9a, 0xa0, 0x72, 0x32, 0xa7, 0xa2, 0xc6, 0x6a, 0x68, 0x2a, 0x6a, 0xbc, 0x44, 0x92, 0xaf, 0x24,
	0x28, 0x85, 0x87, 0x81, 0xa4, 0xed, 0x59, 0xa2, 0x94, 0x2a, 0x77, 0xfe, 0x42, 0xe5, 0x84, 0x66,
	0xe2, 0xc4, 0xa5, 0xd2, 0x2c, 0x5e, 0x4d, 0x53, 0x69, 0x96, 0x20, 0x96, 0xe4, 0x19, 0x14, 0x7d,
	0x41, 0x23, 0x69, 0x2d, 0x12, 0x14, 0x55, 0xb9, 0xbd, 0x70, 0x9d, 0xc0, 0x6e, 0x3f, 0xfa, 0xe9,
	0xa4, 0x2a, 0xbd, 0x38, 0xa9, 0x4a, 0xbf, 0x9e, 0x54, 0xa5, 0xe7, 0xa7, 0xd5, 0xcc, 0x8b, 0xd3,
	0x6a, 0xe6, 0xe5, 0x69, 0x35, 0xf3, 0xe9, 0x1d, 0xdd, 0x60, 0x4f, 0x87, 0xdd, 0x46, 0xcf, 0x36,
	0x9b, 0xe1, 0x7f, 0x7e, 0xf0, 0xf0, 0x76, 0xb7, 0x6f, 0xf7, 0x3e, 0xef, 0x3d, 0xa5, 0x86, 0xd5,
	0x3c, 0x98, 0xfa, 0xfb, 0xf7, 0xae, 0xae, 0x6e, 0xb7, 0xc0, 0x6f, 0x67, 0xef, 0xfe, 0x11, 0x00,
	0x00, 0xff, 0xff, 0x68, 0xe6, 0xa2, 0x50, 0x20, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Create defines a method to create a new agreement.
	Create(ctx context.Context, in *MsgCreateAgreementRequest, opts ...grpc.CallOption) (*MsgCreateAgreementResponse, error)
	// Update defines a method to update an agreement.
	Update(ctx context.Context, in *MsgUpdateAgreementRequest, opts ...grpc.CallOption) (*MsgUpdateAgreementResponse, error)
	// Delete defines a method to create a new agreement.
	Delete(ctx context.Context, in *MsgDeleteAgreementRequest, opts ...grpc.CallOption) (*MsgDeleteAgreementResponse, error)
	// Activate defines a method to activate an agreement
	Activate(ctx context.Context, in *MsgActivateAgreementRequest, opts ...grpc.CallOption) (*MsgActivateAgreementResponse, error)
	// Renew defines a method to renew an agreement
	Renew(ctx context.Context, in *MsgRenewAgreementRequest, opts ...grpc.CallOption) (*MsgRenewAgreementResponse, error)
	// Amend defines a method to amend an agreement
	Amend(ctx context.Context, in *MsgAmendAgreementRequest, opts ...grpc.CallOption) (*MsgAmendAgreementResponse, error)
	// Terminate defines a method to terminate an agreement
	Terminate(ctx context.Context, in *MsgTerminateAgreementRequest, opts ...grpc.CallOption) (*MsgTerminateAgreementResponse, error)
	// Expire defines a method to expire an agreement
	Expire(ctx context.Context, in *MsgExpireAgreementRequest, opts ...grpc.CallOption) (*MsgExpireAgreementResponse, error)
	// Finance defines a metho to finance an agreement
	Finance(ctx context.Context, in *MsgFinanceAgreementRequest, opts ...grpc.CallOption) (*MsgFinanceAgreementResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Create(ctx context.Context, in *MsgCreateAgreementRequest, opts ...grpc.CallOption) (*MsgCreateAgreementResponse, error) {
	out := new(MsgCreateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Update(ctx context.Context, in *MsgUpdateAgreementRequest, opts ...grpc.CallOption) (*MsgUpdateAgreementResponse, error) {
	out := new(MsgUpdateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Delete(ctx context.Context, in *MsgDeleteAgreementRequest, opts ...grpc.CallOption) (*MsgDeleteAgreementResponse, error) {
	out := new(MsgDeleteAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Activate(ctx context.Context, in *MsgActivateAgreementRequest, opts ...grpc.CallOption) (*MsgActivateAgreementResponse, error) {
	out := new(MsgActivateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Renew(ctx context.Context, in *MsgRenewAgreementRequest, opts ...grpc.CallOption) (*MsgRenewAgreementResponse, error) {
	out := new(MsgRenewAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Renew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Amend(ctx context.Context, in *MsgAmendAgreementRequest, opts ...grpc.CallOption) (*MsgAmendAgreementResponse, error) {
	out := new(MsgAmendAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Amend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Terminate(ctx context.Context, in *MsgTerminateAgreementRequest, opts ...grpc.CallOption) (*MsgTerminateAgreementResponse, error) {
	out := new(MsgTerminateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Terminate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Expire(ctx context.Context, in *MsgExpireAgreementRequest, opts ...grpc.CallOption) (*MsgExpireAgreementResponse, error) {
	out := new(MsgExpireAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Expire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Finance(ctx context.Context, in *MsgFinanceAgreementRequest, opts ...grpc.CallOption) (*MsgFinanceAgreementResponse, error) {
	out := new(MsgFinanceAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.agreement.v1beta1.Msg/Finance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Create defines a method to create a new agreement.
	Create(context.Context, *MsgCreateAgreementRequest) (*MsgCreateAgreementResponse, error)
	// Update defines a method to update an agreement.
	Update(context.Context, *MsgUpdateAgreementRequest) (*MsgUpdateAgreementResponse, error)
	// Delete defines a method to create a new agreement.
	Delete(context.Context, *MsgDeleteAgreementRequest) (*MsgDeleteAgreementResponse, error)
	// Activate defines a method to activate an agreement
	Activate(context.Context, *MsgActivateAgreementRequest) (*MsgActivateAgreementResponse, error)
	// Renew defines a method to renew an agreement
	Renew(context.Context, *MsgRenewAgreementRequest) (*MsgRenewAgreementResponse, error)
	// Amend defines a method to amend an agreement
	Amend(context.Context, *MsgAmendAgreementRequest) (*MsgAmendAgreementResponse, error)
	// Terminate defines a method to terminate an agreement
	Terminate(context.Context, *MsgTerminateAgreementRequest) (*MsgTerminateAgreementResponse, error)
	// Expire defines a method to expire an agreement
	Expire(context.Context, *MsgExpireAgreementRequest) (*MsgExpireAgreementResponse, error)
	// Finance defines a metho to finance an agreement
	Finance(context.Context, *MsgFinanceAgreementRequest) (*MsgFinanceAgreementResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Create(ctx context.Context, req *MsgCreateAgreementRequest) (*MsgCreateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMsgServer) Update(ctx context.Context, req *MsgUpdateAgreementRequest) (*MsgUpdateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedMsgServer) Delete(ctx context.Context, req *MsgDeleteAgreementRequest) (*MsgDeleteAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedMsgServer) Activate(ctx context.Context, req *MsgActivateAgreementRequest) (*MsgActivateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activate not implemented")
}
func (*UnimplementedMsgServer) Renew(ctx context.Context, req *MsgRenewAgreementRequest) (*MsgRenewAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renew not implemented")
}
func (*UnimplementedMsgServer) Amend(ctx context.Context, req *MsgAmendAgreementRequest) (*MsgAmendAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Amend not implemented")
}
func (*UnimplementedMsgServer) Terminate(ctx context.Context, req *MsgTerminateAgreementRequest) (*MsgTerminateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Terminate not implemented")
}
func (*UnimplementedMsgServer) Expire(ctx context.Context, req *MsgExpireAgreementRequest) (*MsgExpireAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Expire not implemented")
}
func (*UnimplementedMsgServer) Finance(ctx context.Context, req *MsgFinanceAgreementRequest) (*MsgFinanceAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Finance not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Create(ctx, req.(*MsgCreateAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Update(ctx, req.(*MsgUpdateAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Delete(ctx, req.(*MsgDeleteAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgActivateAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Activate(ctx, req.(*MsgActivateAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Renew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRenewAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Renew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Renew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Renew(ctx, req.(*MsgRenewAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Amend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAmendAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Amend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Amend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Amend(ctx, req.(*MsgAmendAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Terminate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTerminateAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Terminate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Terminate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Terminate(ctx, req.(*MsgTerminateAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Expire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExpireAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Expire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Expire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Expire(ctx, req.(*MsgExpireAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Finance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinanceAgreementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Finance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.agreement.v1beta1.Msg/Finance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Finance(ctx, req.(*MsgFinanceAgreementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stateset.agreement.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Msg_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Msg_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Msg_Delete_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _Msg_Activate_Handler,
		},
		{
			MethodName: "Renew",
			Handler:    _Msg_Renew_Handler,
		},
		{
			MethodName: "Amend",
			Handler:    _Msg_Amend_Handler,
		},
		{
			MethodName: "Terminate",
			Handler:    _Msg_Terminate_Handler,
		},
		{
			MethodName: "Expire",
			Handler:    _Msg_Expire_Handler,
		},
		{
			MethodName: "Finance",
			Handler:    _Msg_Finance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stateset/agreement/v1beta1/tx.proto",
}

func (m *Agreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Agreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Agreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EndDate) > 0 {
		i -= len(m.EndDate)
		copy(dAtA[i:], m.EndDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndDate)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.StartDate) > 0 {
		i -= len(m.StartDate)
		copy(dAtA[i:], m.StartDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StartDate)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Counterparty) > 0 {
		i -= len(m.Counterparty)
		copy(dAtA[i:], m.Counterparty)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Counterparty)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Party) > 0 {
		i -= len(m.Party)
		copy(dAtA[i:], m.Party)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Party)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.TotalAgreementValue) > 0 {
		i -= len(m.TotalAgreementValue)
		copy(dAtA[i:], m.TotalAgreementValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TotalAgreementValue)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AgreementStatus) > 0 {
		i -= len(m.AgreementStatus)
		copy(dAtA[i:], m.AgreementStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementStatus)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AgreementType) > 0 {
		i -= len(m.AgreementType)
		copy(dAtA[i:], m.AgreementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AgreementName) > 0 {
		i -= len(m.AgreementName)
		copy(dAtA[i:], m.AgreementName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AgreementNumber) > 0 {
		i -= len(m.AgreementNumber)
		copy(dAtA[i:], m.AgreementNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AgreementFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AgreementFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AgreementFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EndDate) > 0 {
		i -= len(m.EndDate)
		copy(dAtA[i:], m.EndDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EndDate)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.StartDate) > 0 {
		i -= len(m.StartDate)
		copy(dAtA[i:], m.StartDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StartDate)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Counterparty) > 0 {
		i -= len(m.Counterparty)
		copy(dAtA[i:], m.Counterparty)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Counterparty)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Party) > 0 {
		i -= len(m.Party)
		copy(dAtA[i:], m.Party)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Party)))
		i--
		dAtA[i] = 0x42
	}
	if m.TotalAgreementValue != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalAgreementValue))
		i--
		dAtA[i] = 0x38
	}
	if len(m.AgreementStatus) > 0 {
		i -= len(m.AgreementStatus)
		copy(dAtA[i:], m.AgreementStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementStatus)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AgreementType) > 0 {
		i -= len(m.AgreementType)
		copy(dAtA[i:], m.AgreementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AgreementName) > 0 {
		i -= len(m.AgreementName)
		copy(dAtA[i:], m.AgreementName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AgreementNumber) > 0 {
		i -= len(m.AgreementNumber)
		copy(dAtA[i:], m.AgreementNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndDate != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.EndDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintTx(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x5a
	}
	if m.StartDate != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintTx(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Counterparty) > 0 {
		i -= len(m.Counterparty)
		copy(dAtA[i:], m.Counterparty)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Counterparty)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Party) > 0 {
		i -= len(m.Party)
		copy(dAtA[i:], m.Party)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Party)))
		i--
		dAtA[i] = 0x42
	}
	if m.TotalAgreementValue != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalAgreementValue))
		i--
		dAtA[i] = 0x38
	}
	if len(m.AgreementStatus) > 0 {
		i -= len(m.AgreementStatus)
		copy(dAtA[i:], m.AgreementStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementStatus)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AgreementType) > 0 {
		i -= len(m.AgreementType)
		copy(dAtA[i:], m.AgreementType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AgreementName) > 0 {
		i -= len(m.AgreementName)
		copy(dAtA[i:], m.AgreementName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AgreementNumber) > 0 {
		i -= len(m.AgreementNumber)
		copy(dAtA[i:], m.AgreementNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgActivateAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ActivationDate) > 0 {
		i -= len(m.ActivationDate)
		copy(dAtA[i:], m.ActivationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ActivationDate)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgActivateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRenewAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenewAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenewAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenewAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenewAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenewAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAmendAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAmendAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAmendAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAmendAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAmendAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAmendAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTerminateAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTerminateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgExpireAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExpireAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExpireAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExpireAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExpireAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExpireAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinanceAgreementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinanceAgreementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinanceAgreementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AgreementId) > 0 {
		i -= len(m.AgreementId)
		copy(dAtA[i:], m.AgreementId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AgreementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinanceAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinanceAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinanceAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Agreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TotalAgreementValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Party)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Counterparty)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StartDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *AgreementFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TotalAgreementValue != 0 {
		n += 1 + sovTx(uint64(m.TotalAgreementValue))
	}
	l = len(m.Party)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Counterparty)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StartDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EndDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TotalAgreementValue != 0 {
		n += 1 + sovTx(uint64(m.TotalAgreementValue))
	}
	l = len(m.Party)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Counterparty)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate)
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgActivateAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ActivationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgActivateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRenewAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRenewAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAmendAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAmendAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTerminateAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTerminateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgExpireAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgExpireAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinanceAgreementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AgreementId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFinanceAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Agreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Agreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Agreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalAgreementValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TotalAgreementValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Party", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Party = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counterparty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Counterparty = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AgreementFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AgreementFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AgreementFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalAgreementValue", wireType)
			}
			m.TotalAgreementValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalAgreementValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Party", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Party = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counterparty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Counterparty = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalAgreementValue", wireType)
			}
			m.TotalAgreementValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalAgreementValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Party", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Party = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counterparty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Counterparty = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartDate == nil {
				m.StartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDate == nil {
				m.EndDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.EndDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActivationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenewAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenewAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenewAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenewAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenewAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenewAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAmendAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAmendAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAmendAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAmendAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAmendAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAmendAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExpireAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExpireAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExpireAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExpireAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExpireAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExpireAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinanceAgreementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinanceAgreementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinanceAgreementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinanceAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinanceAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinanceAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
